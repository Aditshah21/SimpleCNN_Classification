# -*- coding: utf-8 -*-
"""SimpleCNN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vPDOxCl8fAhJbOQ9ilSYE4B8ybmHswwG
"""

# Convolutional Neural Network

# Installing Theano
# pip install --upgrade --no-deps git+git://github.com/Theano/Theano.git

# Installing Tensorflow
# pip install tensorflow

# Installing Keras
# pip install --upgrade keras

# Part 1 - Building the CNN

# Importing the Keras libraries and packages
from keras.models import Sequential
from keras.layers import Convolution2D
from keras.layers import MaxPooling2D
from keras.layers import Flatten
from keras.layers import Dense

#Initializing the CNN

classifier= Sequential()

#Step_1 Convolution

classifier.add(Convolution2D(32,3,3, input_shape=(256,256,3), activation='relu'))

#Step_2 MaxPooling

classifier.add(MaxPooling2D(pool_size=(2,2)))

#Step_3 Flattening

classifier.add(Flatten())

#Step_4 Full Connection

classifier.add(Dense(output_dim=128,activation='relu'))
classifier.add(Dense(output_dim=1,activation='sigmoid'))

#Compling the CNN

classifier.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])

#To download dataset
!git clone https://github.com/Aditshah21/SimpleCNN_Classification.git

# Part 2- Fitting CNN to the images

from keras.preprocessing.image import ImageDataGenerator


train_datagen = ImageDataGenerator(
        rescale=1./255,
        shear_range=0.2,
        zoom_range=0.2,
        horizontal_flip=True)

test_datagen = ImageDataGenerator(rescale=1./255)

training_set = train_datagen.flow_from_directory(
        'SimpleCNN_Classification/dataset/training_set',
        target_size=(256,256),
        batch_size=32,
        class_mode='binary')

test_set = test_datagen.flow_from_directory(
        'SimpleCNN_Classification/dataset/test_set',
        target_size=(256,256),
        batch_size=32,
        class_mode='binary')

classifier.fit_generator(
        training_set,
        steps_per_epoch=8000,
        epochs=25,
        validation_data=test_set,
        validation_steps=2000)

#Part 3 Making Predictions

import numpy as np
from keras.preprocessing import image
test_image=image.load_img('SimpleCNN_Classification/dataset/single_prediction/cat_or_dog_1.jpg',target_size=(256,256))
test_image=image.img_to_array(test_image)
test_image=np.expand_dims(test_image,axis=0)
result =classifier.predict(test_image)
training_set.class_indices
if result[0][0] == 1:
    prediction = 'dog'
else:
    prediction = 'cat'